'use strict';

/*
Бинарный (двоичный) поиск на JavaScript

Поиск элемента в отсортированном массиве. Бинарный поиск (binary search)
представляет собой в высшей степени эффективный алгоритм для поиска
в отсортированном массиве. Он работает путем сравнения искомого ключа t
со средним элементом массива arr[k]. Если они равны, алгоритм прекращает работу.
В противном случае та же операция рекурсивно повторяется для первой половины массива,
если t < arr[k], и для второй, если t > arr[k].
*/

// t - искомый элемент
// arr - упорядоченный массив, в котором ищем

// Стандартная реализация
function binarySearch(t, arr) {
    var i = 0,
        j = arr.length - 1,
        k;

    while (i <= j)
    {  k = Math.floor((i+j)/2);
        if (t === arr[k]) return k;
        else if (t < arr[k]) j = k - 1;
        else i = k + 1;
    }
    // На выходе индекс искомого элемента
    // Если искомого элемента нет в массиве, то -1
    return -1;
}

const arr = [1, 2, 3, 4, 6, 7, 8];
console.log(binarySearch(6, arr));

// Оптимизированный вариант
function binarySearchOpt(t, arr) {
    var i = 0,
        j = arr.length,
        k;

    while (i < j)
    {  k = Math.floor((i+j)/2);
        if (t <= arr[k]) j = k;
        else i = k + 1;
    }

    if (arr[ i ] === t) return i;     // На выходе индекс искомого элемента.
    else return -1;                 // Если искомого элемента нет в массиве, то -1.
}


const arr2 = [1, 2, 3, 4, 6, 7, 8];
console.log(binarySearchOpt(6, arr2));
