'use strict';

/*
Интерполирующий поиск на JavaScript

Рассмотрим алгоритм поиска в отсортированном массиве, который называется
интерполирующим поиском (interpolation search). В отличие от бинарного поиска,
который всегда сравнивает ключ поиска со средним значением отсортированного массива
(а следовательно, всегда уменьшает размер задачи вдвое), интерполяционный поиск
учитывает значение ключа поиска при определении элемента массива, который будет сравниваться
с ключом. В определенном смысле алгоритм имитирует поиск имени в телефонной книге.
Если мы ищем в телефонной книге, например, Иванов — вряд ли мы будем открывать ее
в средине или ближе к концу, как поступили бы при поиске Петрова.
*/

// t - искомый элемент
// arr - упорядоченный массив, в котором ищем
function interpolationSearch(t, arr) {
    var mid,
        low = 0,
        high = arr.length - 1;

    while (arr[low] < t && arr[high] > t)
    {  mid = low + Math.floor( ((t - arr[low]) * (high - low)) / (arr[high] - arr[low]) );
        if (arr[mid] < t) low = mid + 1;
        else if (arr[mid] > t) high = mid - 1;
        else return mid;
    }

    // На выходе индекс искомого элемента
    // Если искомого элемента нет в массиве, то -1
    if (arr[low] === t) return low;
    else if (arr[high] === t) return high;
    else return -1;
}


const arr = [1, 2, 3, 4, 6, 7, 8];
console.log(interpolationSearch(6, arr));
